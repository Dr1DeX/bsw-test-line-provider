version: '3'
services:
  bets_db:
    image: postgres:16.2-alpine
    restart: always
    container_name: bets_db
    shm_size: 256mb
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - PGDATA:/var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER}" ]
      interval: 30s
      timeout: 10s
      retries: 5

  bets_storage:
    image: redis:7.2.4-alpine
    restart: always
    container_name: bets_storage
    ports:
      - '6379:6379'

  rabbit:
    container_name: rabbit
    image: rabbitmq:3-management
    restart: always
    shm_size: 128mb
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "status" ]
      interval: 30s
      timeout: 10s
      retries: 5
  api:
    container_name: api
    restart: always
    build:
      context: .
      dockerfile: .docker/dev/api/Dockerfile
    ports:
      - '8080:8080'
    env_file:
      - .env.staging
  nginx:
    container_name: nginx
    build:
      context: .docker/dev/nginx
      dockerfile: Dockerfile
    depends_on:
      - api
    ports:
      - '80:80'
      - '443:443'
